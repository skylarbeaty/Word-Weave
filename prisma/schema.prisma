// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  email String @unique
  emailVerified DateTime?
  name String
  image String?
  PuzzleSolution PuzzleSolution[]
  accounts Account[]
  sessions Session[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String  @unique
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId]) 
}

model Session {
  id           String  @id @default(cuid())
  sessionToken String  @unique
  userId       String
  expires      DateTime
  user         User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String  @unique
  expires    DateTime
  @@unique([identifier, token])
}

model Puzzle {
  id String @id @default(uuid())
  date DateTime // date for daily puzzles
  lettersAlpha String
  lettersScrambled String
  knownSolution Json
  solutions PuzzleSolution[]
  createdAt DateTime @default(now())
}

model PuzzleSolution {
  id String @id @default(uuid())
  user User @relation(fields: [userID], references: [id])
  userID String
  puzzle Puzzle @relation(fields: [puzzleID], references: [id])
  puzzleID String
  boardState Json
  score Int
  submittedAt DateTime @default(now())

  @@unique([userID, puzzleID])
}